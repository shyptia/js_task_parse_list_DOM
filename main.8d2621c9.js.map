{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelector","employeesList","children","salaryToNumber","salary","Number","replace","split","join","sortList","listOfEmployees","sortedListOfEmployees","sort","a","b","dataset","append","getEmployees","employees","forEach","employee","push","name","innerText","position","age"],"mappings":";AAAA,aAqCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAnCA,IAAMA,EAAOC,SAASC,cAAc,MAC9BC,EAAoBH,EAAAA,EAAKI,UAE/B,SAASC,EAAeC,GACfC,OAAAA,OAAOD,EACXE,QAAQ,IAAK,IACbC,MAAM,KACNC,KAAK,KAIV,SAASC,EAASC,GACVC,IAAAA,EAAwBD,EAAgBE,KAAK,SAACC,EAAGC,GAC9CX,OAAAA,EAAeW,EAAEC,QAAQX,QAAUD,EAAeU,EAAEE,QAAQX,UAGrEN,EAAKkB,OAALlB,MAAAA,EAAea,EAAAA,IAGjB,SAASM,EAAaP,GACdQ,IAAAA,EAAY,GAWXA,OATPR,EAAgBS,QAAQ,SAAAC,GACtBF,EAAUG,KAAK,CACbC,KAAMF,EAASG,UACfC,SAAUJ,EAASL,QAAQS,SAC3BpB,OAAQgB,EAASL,QAAQX,OACzBqB,IAAKL,EAASL,QAAQU,QAInBP,EAGTT,EAASR,GACTgB,EAAahB","file":"main.8d2621c9.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.querySelector('ul');\nconst employeesList = [...list.children];\n\nfunction salaryToNumber(salary) {\n  return Number(salary\n    .replace('$', '')\n    .split(',')\n    .join('')\n  );\n}\n\nfunction sortList(listOfEmployees) {\n  const sortedListOfEmployees = listOfEmployees.sort((a, b) => {\n    return salaryToNumber(b.dataset.salary) - salaryToNumber(a.dataset.salary);\n  });\n\n  list.append(...sortedListOfEmployees);\n}\n\nfunction getEmployees(listOfEmployees) {\n  const employees = [];\n\n  listOfEmployees.forEach(employee => {\n    employees.push({\n      name: employee.innerText,\n      position: employee.dataset.position,\n      salary: employee.dataset.salary,\n      age: employee.dataset.age,\n    });\n  });\n\n  return employees;\n}\n\nsortList(employeesList);\ngetEmployees(employeesList);\n"]}